#!/bin/bash
###############################################################################
<<LICENSE

The MIT License (MIT)

Copyright (c) 2016 Jean-Matthieu COULON

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

LICENSE
###############################################################################


wstunnel_requires() {
  echo nginx
  echo www
  echo daemon
  echo settings
}

wstunnel_setup() {
  require nginx setup
  npm install -g wstunnel
  daemon add wstunnel

  require aptpackage
  aptpackage install_node

  settings set WSTUNNEL_MODE server
  settings save
}

wstunnel_client() {
  if ! has master || ! contains "$(master mode)" client roaming; then
    echo "Error: No master to connect to."
    exit 2
  fi

  syspackage nodejs-legacy node
  syspackage npm npm
  npm install -g wstunnel
  daemon add wstunnel

  settings set WSTUNNEL_MODE client
  settings save
}

wstunnel_cleanup() {
  daemon del wstunnel
  settings del WSTUNNEL_MODE
  settings save
}

wstunnel_ready() {
  if has daemon && daemon has wstunnel && [ "$WSTUNNEL_MODE" ]; then
    return 0
  fi
  return 1
}

wstunnel_daemon() {
  if [ "$WSTUNNEL_MODE" = "client" ]; then
    exec /usr/local/bin/wstunnel -t 8022 https://"$MASTER"/wstunnel
  else
    exec /usr/local/bin/wstunnel -s 8022 -t 127.0.0.1:22
  fi
}

wstunnel_settings() {
  echo WSTUNNEL_MODE
}
