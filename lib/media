#!/bin/bash
###############################################################################
<<LICENSE

The MIT License (MIT)

Copyright (c) 2016 Jean-Matthieu COULON

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

LICENSE
###############################################################################


media_setup() {
  require settings
  require utils setup
  require mass setup

  settings prompt_path KODIDIR "/var/lib/kodi" "Kodi home directory"
  settings prompt_bool RETROARCH "true" "Deploy RetroArch ?"
  settings save
  rm -r "$KODIDIR"

  utils client

  syspackage lightdm lightdm
  syspackage kodi kodi
  syspackage xbindkeys xbindkeys
  syspackage xbindkeys-config xbindkeys-config
  syspackage speedcrunch speedcrunch
  adduser --home "$KODIDIR" --disabled-password --gecos "Kodi user for ${SC},,," kodi

  # Build lightdm configuration
  sed -i -e 's/^#user-session=.*/user-session=kodi/' /etc/lightdm/lightdm.conf
  sed -i -e 's:^#session-setup-script=.*:session-setup-script=xbindkeys --file /etc/kodi-xbindkeysrc:' /etc/lightdm/lightdm.conf
  sed -i -e 's/^#autologin-user=.*/autologin-user=kodi/' /etc/lightdm/lightdm.conf
  sed -i -e 's/^#autologin-user-timeout=.*/autologin-user-timeout=15/' /etc/lightdm/lightdm.conf

  # Build xbindkeys configuration
  media__customkodi_desktop > /usr/share/xsessions/customkodi.desktop
  media__xbindkeysrc > "$KODIDIR"/.xbindkeysrc
  chown kodi:kodi "$KODIDIR"/.xbindkeysrc
  media__xinitrc > "$KODIDIR"/.xinitrc
  chown kodi:kodi "$KODIDIR"/.xinitrc

  if getbool RETROARCH; then
    media_setup_retroarch
  fi

  systemctl restart lightdm
}

media_cleanup() {
  sed -i -e 's/^user-session=.*/#user-session=/' /etc/lightdm/lightdm.conf || true
  sed -i -e 's/^autologin-user=.*/#autologin-user=/' /etc/lightdm/lightdm.conf || true
  sed -i -e 's/^autologin-user-timeout=.*/#autologin-user-timeout=/' /etc/lightdm/lightdm.conf || true
  systemctl restart lightdm
  
  sleep 5
  local processes="$(ps aux | grep ^kodi | awk '{print $2}')"
  [ -z "$processes" ] || kill -9 $processes || true

  rm -f /usr/share/xsessions/customkodi.desktop

  deluser --remove-home kodi
  if [ -d "$KODIDIR" ]; then rm -r "$KODIDIR"; fi

  require settings
  settings del KODIDIR
  settings del RETROARCH
}

media_setup_retroarch() {
  syspackage git git
  syspackage build-essential gcc g++
  syspackage libgl1-mesa-dev /usr/include/GL/gl.h
  syspackage zlib1g-dev /usr/include/zlib.h
  syspackage libsdl2-dev /usr/include/SDL2/SDL.h

  [ -d "$KODIDIR/retroarch/build" ] || mkdir -p "$KODIDIR/retroarch/build"
  (
    cd "$KODIDIR/retroarch/build"

    # Fetch and install RetroArch frontend
    if [ -d RetroArch ]; then
      cd RetroArch
      git pull
      cd ..
    else
      git clone git://github.com/libretro/RetroArch.git
    fi

    cd RetroArch
    ./configure --prefix="$KODIDIR/retroarch"
    make -j6
    make install
  )
}

media_ready() {
  if which kodi &>/dev/null \
  && [ -d "$KODIDIR" ] \
  && [ "$RETROARCH" ] \
  && which lightdm &>/dev/null \
  && grep -E '^autologin-user=kodi' /etc/lightdm/lightdm.conf &>/dev/null \
  ; then
    return 0
  fi
  return 1
}

media__xbindkeysrc() {
  cat <<EOF
"xterm"
  control+Mod4+XF86Explorer
"firefox -width 1920 -height 1080"
  XF86HomePage
"firefox -width 1920 -height 1080 http://duckduckgo.com"
  XF86Search
"xbindkeys-config"
  control+Mod4+k
"speedcrunch"
  XF86Calculator
EOF
  if getbool RETROARCH; then
  cat <<EOF
"$KODIDIR/retroarch/bin/retroarch -f"
  XF86Tools
EOF
  fi
}

media__customkodi_desktop() {
  cat <<EOF
[Desktop Entry]
Name=customkodi
Exec=/etc/X11/Xsession
NoDisplay=true
EOF
}

media__xinitrc() {
  cat <<EOF
xbindkeys
kodi-standalone
EOF
}

media_files() {
  echo "/etc/lightdm/lightdm.conf"
  echo "/etc/kodi-xbindkeysrc"
  echo "$KODIDIR"
}

media_settings() {
  echo KODIDIR
  echo RETROARCH
}

media_restore() {
  local source="$1"; shift
  require files

  if ! [ "$KODIDIR" ]; then
    return 0
  fi

  adduser --home "$KODIDIR" --disabled-password --gecos "Kodi user for ${SC},,," kodi
  files restoremodule media "$source"

  systemctl restart lightdm
}
