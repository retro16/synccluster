#!/bin/bash
###############################################################################
<<LICENSE

The MIT License (MIT)

Copyright (c) 2016 Jean-Matthieu COULON

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

LICENSE
###############################################################################


nginx_requires() {
  echo ssl
  echo hostconf
}

nginx_setup() {
  systemctl stop apache2 || true
  syspackage nginx nginx
  require ssl setup
  require hostconf setup
  nginx proxy_conf > /etc/nginx/sites-available/proxy
  rm /etc/nginx/sites-enabled/*
  ln -s ../sites-available/proxy /etc/nginx/sites-enabled/proxy
  systemctl enable nginx
  systemctl restart nginx
  systemctl start apache2 || true
}

nginx_cleanup() {
  rm /etc/nginx/sites-available/proxy /etc/nginx/sites-enabled/proxy
}

nginx_ready() {
  if [ -e /etc/nginx/sites-available/proxy ]; then
    return 0
  fi
  return 1
}

nginx_setfqdn() {
  if nginx ready; then
    nginx proxy_conf > /etc/nginx/sites-available/proxy
    systemctl reload nginx
  fi
}

nginx_proxy_conf() {
cat <<EOF
server {
  listen 80 default_server;
  server_name coulon-jm.fr;
  return 301 https://$(hostconf domain)\$request_uri;
}

server {
  listen 443 ssl default_server;
  ssl_certificate $SSLCERT;
  ssl_certificate_key $SSLKEY;
  root /var/www/html;
  index index.html index.php;
  client_max_body_size 514m;
  location /transmission {
        proxy_pass http://127.0.0.1:9091;
        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header        Host            \$host;
        proxy_set_header        X-Real-IP       \$remote_addr;
        proxy_set_header        X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto \$scheme;
  }
  location /wstunnel {
        proxy_pass http://127.0.0.1:8022;
        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header        Host            \$host;
        proxy_set_header        X-Real-IP       \$remote_addr;
        proxy_set_header        X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto \$scheme;
  }
  location / {
    client_max_body_size 513M;
    client_body_buffer_size 513M;
    proxy_set_header X-Real-IP  \$remote_addr;
    proxy_set_header X-Forwarded-For \$remote_addr;
    proxy_set_header Host \$host;
    proxy_pass http://127.0.0.1:8080/;
  }
}

EOF
}
