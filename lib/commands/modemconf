#!/bin/bash
###############################################################################
<<LICENSE

The MIT License (MIT)

Copyright (c) 2016 Jean-Matthieu COULON

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

LICENSE
###############################################################################


modemconf_setup() {
  require boot
  require crontask
  require settings
  syspackage wget wget
  settings prompt MODEM "$(ip route | awk '/^default/ { print $3 }')" "Please enter the IP address of the modem:"
  settings prompt DHCPSTART "10" "DHCP range start:"
  settings prompt DHCPEND "50" "DHCP range end:"
  boot add modemconf
  crontask add modemconf daily
  settings save
}

modemconf_cleanup() {
  if has boot; then
    boot del modemconf
  fi
  require settings
  unset MODEM
  unset DHCPSTART
  unset DHCPEND
  settings save
}

modemconf_enabled() {
  if has boot && boot has modemconf; then
    return 0
  fi
  return 1
}

modemconf_ready() {
  if modemconf enabled && [ "$MODEM" ] && [ "$DHCPSTART" ] && [ "$DHCPEND" ]; then
    return 0
  fi
  return 1
}

modemconf_boot() {
  modemconf__refresh
}

modemconf_cron() {
  modemconf__refresh
}

modemconf__refresh() {
local ip1="${MODEM%.*}"
local ip4="${MODEM#*.}"
local ip2="${ip%.*}"
ip4="${ip#*.}"
local ip3="${ip%.*}"
ip4="${ip#*.}"


wget --no-check-certificate -qO/dev/null --header="Content-Type: application/x-www-form-urlencoded" --post-data="loginUsername=admin&loginPassword=password" http://"$MODEM"/goform/login

wget --no-check-certificate -qO/dev/null --header="Content-Type: application/x-www-form-urlencoded" --post-data="RgLanIpAddress0=$ip1&RgLanIpAddress1=$ip2&RgLanIpAddress2=$ip3&RgLanIpAddress3=$ip4&RgDhcpServer=1&RgDhcpStartingIpAddress3=$DHCPSTART&RgDhcpEndingIpAddress3=$DHCPEND&RgDhcpLeaseDuration=86400" http://"$MODEM"/goform/WebUiRgLanParam

wget --no-check-certificate -qO/dev/null --header="Content-Type: application/x-www-form-urlencoded" --post-data="RgWiFiService=1&RgWiFiSSIDBroadcast=1&RgWiFiServiceChkBox=1&RgWiFiSSIDBroadcastChkBox=1&RgWiFiPrimSSID=jm&RgWiFiModeSelected=1&RgWiFiPowerOutputSelected=100&RgWiFiNBandWidthSelected=2&RgWiFiChannelSelected=0&PrimSecurityRadio=0&PrimSecurityRadioValue=0&GNSecurityRadioValue=0&PreSharedKey=QLBV66P1EF&PreSharedKey=&Wep128NetworkKey1=00000000000000000000000001&RgWiFiApplyConfigChanges=Appliquer" http://"$MODEM"/goform/WebUiRgWiFiConfig

wget --no-check-certificate -qO/dev/null http://"$MODEM"/logout.html
}

modemconf_settings() {
  echo MODEM
  echo DHCPSTART
  echo DHCPEND
}

modemconf() {
  subcall modemconf "$@"
}
