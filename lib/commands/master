#!/bin/bash
###############################################################################
<<LICENSE

The MIT License (MIT)

Copyright (c) 2016 Jean-Matthieu COULON

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

LICENSE
###############################################################################


# Module to access master server

master_help() {
cat <<EOF
$SC master
  Do operations with the master server

$SC master setup [REMOTE]
  Initialize a link between this server and a remote.
  REMOTE must be of the form USER@HOST.
  Example: $SC master setup root@example.com
EOF
}

master_setup() {
  require snapshot
  require settings
  snapshot create
  settings prompt SCMASTER_USER "root@" "Enter master server user and host:"
}

master_check() {
  if [ -z "$SCMASTER_USER" ]; then
    echo "Master server not defined"
    exit 2
  fi
}

master_enabled() {
  if [ -z "$SCMASTER_USER" ]; then
    return 1;
  fi
  return 0;
}

master_getfile() {
  master check
  local files=("$@")
  local sources=("${files[@]:0:${#files[@]}-1}")
  local dest="${files[@]: -1}"

  rsync -az "$SCMASTER_USER:${sources[@]}" "$dest"
}

master_exec() {
  set +e
  local rv
  if [ "$SCMASTER_USER" ]; then
    ssh "$MASTER_USER" "$SC master exec" "$@"
    rv="$?"
  else
    "$@"
    rv="$?"
  fi
  set -e
  return $rv
}

master_status() {
  if [ "$SCMASTER_USER" ]; then
    echo "This host points to master host $SCMASTER_USER"
  else
    echo "This host has no master"
  fi
}

master_settings() {
  echo SCMASTER_USER
}

master() {
  subcall master "$@"
}
